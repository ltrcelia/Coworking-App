version: '3.8'

services:
  # Base de donnÃ©es MongoDB
  database:
    image: mongo:7
    container_name: coworkspace-db
    restart: unless-stopped
    volumes:
      - mongodb_data:/data/db
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"
    networks:
      - coworkspace-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # API Backend TypeScript
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: coworkspace-api
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3000
      DATABASE_URL: mongodb://admin:password@database:27017/coworkspace?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-24h}
      CORS_ORIGIN: http://localhost:3002
    volumes:
      - ./backend/uploads:/app/uploads
    ports:
      - "3001:3000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - coworkspace-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: production
    container_name: coworkspace-web
    restart: unless-stopped
    ports:
      - "5173:5173"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - coworkspace-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  mongodb_data:
    driver: local

networks:
  coworkspace-network:
    driver: bridge
